name: kafka-stack

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.7.1
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_SERVERS: zookeeper:2888:3888
        volumes:
            - zookeeper-data-volume:/var/lib/zookeeper/data
            - zookeeper-log-volume:/var/lib/zookeeper/log
            - zookeeper-secrets-volume:/etc/zookeeper/secrets

    kafka:
        image: confluentinc/cp-kafka:7.7.1
        hostname: kafka
        container_name: kafka
        ports:
            - "9092:9092"
            - "29092:29092"
            - "9999:9999"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_JMX_PORT: 9001
            KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
            KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        volumes:
            - kafka-data-volume:/var/lib/kafka/data
            - kafka-secrets-volume:/etc/kafka/secrets
        depends_on:
            - zookeeper

    kafka-schema-registry:
        image: confluentinc/cp-schema-registry:7.7.1
        hostname: kafka-schema-registry
        container_name: kafka-schema-registry
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
            SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        depends_on:
            - zookeeper
            - kafka

    kafka-rest-proxy:
        image: confluentinc/cp-kafka-rest:7.7.1
        hostname: kafka-rest-proxy
        container_name: kafka-rest-proxy
        ports:
            - "8082:8082"
        environment:
            # KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
            KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
            KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
            KAFKA_REST_HOST_NAME: kafka-rest-proxy
            KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:19092
        depends_on:
            - zookeeper
            - kafka
            - kafka-schema-registry

    kafka-connect:
        image: confluentinc/cp-kafka-connect:7.7.1
        hostname: kafka-connect
        container_name: kafka-connect
        ports:
            - "8083:8083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: "kafka:19092"
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: compose-connect-group
            CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
            CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
            CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
            CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
            CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
            CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
            CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
            CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
            CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components"
        volumes:
            - ./kafka-connectors:/etc/kafka-connect/jars/
        depends_on:
            - zookeeper
            - kafka
            - kafka-schema-registry
            - kafka-rest-proxy
        command:
            - bash
            - -c
            - |
                confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
                confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.4.0
                /etc/confluent/docker/run

    conduktor-postgresql:
        image: postgres:latest
        container_name: conduktor-postgresql
        hostname: conduktor-postgresql
        volumes:
            - conduktor-pg-data-volume:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: "conduktor-platform"
            POSTGRES_USER: "${POSTGRES_USER}"
            POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
            POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"

    conduktor:
        image: conduktor/conduktor-platform:latest
        container_name: conduktor
        ports:
            - "8080:8080"
        volumes:
            - conduktor-data-volume:/var/conduktor
        environment:
            CDK_ORGANIZATION_NAME: "local-dev"
            CDK_ADMIN_EMAIL: "admin@admin.io"
            CDK_ADMIN_PASSWORD: "admin"
            CDK_DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@conduktor-postgresql:5432/conduktor-platform"
            CDK_CLUSTERS_0_ID: "default"
            CDK_CLUSTERS_0_NAME: "Local Dev Kafka Cluster"
            CDK_CLUSTERS_0_COLOR: "#0013E7"
            CDK_CLUSTERS_0_BOOTSTRAPSERVERS: "PLAINTEXT://kafka:19092"
            CDK_CLUSTERS_0_SCHEMAREGISTRY_URL: "http://kafka-schema-registry:8081"
            CDK_CLUSTERS_0_KAFKACONNECTS_0_URL: "http://kafka-connect:8083"
            CDK_CLUSTERS_0_KAFKACONNECTS_0_NAME: "full stack kafka connect"

volumes:
    zookeeper-data-volume:
    zookeeper-log-volume:
    zookeeper-secrets-volume:
    kafka-data-volume:
    kafka-secrets-volume:
    conduktor-data-volume:
    conduktor-pg-data-volume:

networks:
    default:
        name: database-stack_default
        external: true
